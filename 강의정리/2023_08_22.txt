< 2023.08.22 >

- 3M/M(3 Man Per Month) : 한달
	"일정한 작업에 요하는 인원수를 노동시간 또는 노동일로 나타내는 개념" 
	한달에 들어가는 사람 노동량의 양
	
	- 3M/W(3 Man Per Week) : 일주일
	- 3M/D(3 Man Per Day) : 하루
	=> 공수 : Effort
	
- WBS (Work Breakdown Structure)
	: 작업분해도 프로젝트의 범위와 최종산출물을 세부요소로 분할한 계층적 구조
	
	-  WBS 작성방법

		1) 전체를 큰 단위로 분할

		2) 각각의 부분에 대해 좀 더 작은 단위로 분해하여, 계층적으로 구성

		3) 워크 패키지 작업 (부분을 구성하는 일련의 작업 단위)

		4) 담당인원을 배치 구성도 완성 

=====================================================================================
< 4 교시 >
- 요구사항 분석 실무

- 테스팅이란?
	- 어플리케이션 또는 시스템(구성요소를 포함해서)의 동작과 성능, 안정성이 요구사항을 만족하는지 확인하는 과정
	- 요구사항을 만족시키지 못함 = 결함(Defect)
	- 버그 (실수)
	- 에러 (Error)
	-> 결함(Defect)와 에러는 다른 의미임
	
	- 테스팅의 원리
	
		- 완벽한 테스팅(Exhaustive Testing)은 불가능하다.
			- 모든 가능성(입력과 사전조건의 모든 조합)을 테스팅하는 것은 지극히 간단한 소프트웨어를 제외하고는
 			  가능하지가 않다.
			- 항공, 의료, 원자력설비 등 안전이 최우선인 소프트웨어인 경우, 더 강도높은 테스팅을 할 뿐이지, 
			  완벽한 테스트가 수행되는 것은 아니다.
		- 테스팅을 개발 초기에 시작한다.
			- 코딩을 한 후에 테스트케이스를 도출하는 것이 아니다.
			- 요구사항 정의서와 설계서 등의 개발산출물을 분석하여 테스트케이스를 도출하는 과정을 통해 결함을 
			  발견해야 한다.
		- 결함 집중(Defect clustering)
			- 대다수의 결함들은 소수의 특정 모듈에 집중되어 발생한다.
		- 살충제 패러독스(Pesticide paradox)
			- 동일한 테스트케이스로 동일한 테스트를 반복적으로 수행한다면, 나중에는 더 이상 새로운 결함을 
			  찾아내지 못한다.
			- 테스트케이스는 정기적으로 리뷰하고 추가해야 한다.
	
	- 테스트 레벨
		- Unit Test
			- 특정 클래스의 메소드 단위의 테스트
			- 의존관계를 끊고 테스트
		- 거래단위테스트
			- 하나의 거래(=서비스)를 완성하기 위해 Sequence Diagram에서 표현되는 클래스 간의 
			  의존관계를 포함한 테스트
		- 통합테스트
			- 프로세스 단위의 테스트
			- 프로세스와 프로세스의 결합을 테스트
		- 인수테스트
			- 다양한 형태로 나타날 수 있음
			- 보통 코어뱅킹에서는 영업점테스트를 의미함
				- 베타테스트(많이 이용하는 지점에서 미리 성능 테스트)
				- 알파테스트(이후에 오픈) 
		- 기능 테스트
			- 기능 요구사항을 만족하는지 확인하는 테스트
		- 비기능 테스트
			- 성능, 가용성, 보안성, 운영절차 등 품질속성을 만족하는지 확인하는 테스트
		- * 회귀(Regression) 테스트
			- 반복 테스트
			- 과거에 정상적으로 작동하는 기능이 소프트웨어의 다른 기능을 수정한 이후에도 여전히 제대로 
			  작동하는지 확인하는 테스트
		- 신구비교테스트
			- Legacy(As-Is)시스템의 결과와 To-Be시스템의 결과가 동일한지 검증하는 테스트			
		- 싸이클테스트
			- 일정기간 시간의 흐름을 갖는 업무 프로세스를 테스트
			- 예) 월말,연말과 같이 특정 기간 까지의 흐름
		- 데이터이행테스트
			- Legacy(As-Is)시스템으로부터 이행한 데이터의 정합성을 확인하는 테스트
		- 테마집중테스트
			- 상품출시, 정보보안, 권한관리, 회계분개 처리 등등
			- 특정한 주제를 선정해서 테스트
		- 대외연계테스트
			- 대외기관과의 I/F의 정합성을 확인하는 테스트
			- 대외 인터페이스 시스템의 테스트
	
	- 테스트 설계 기법에 따른 테스트의 종류
		- White Box Test vs Black Box Test
			
			- White Box Test = 구조 기반 테스트케이스 설계
				- 코드와 개발 설계 등의 소프트웨어 구현 정보를 기반으로 테스트케이스를 도출한다. 
				- 수행된 테스트케이스를 바탕으로 테스트커버리지를 측정할 수 있다
					
					* 테스트 커버리지? *
					
					- 테스트 커버리지란 내가 얼마나 테스트를 꼼꼼하게 했나에 대한 용어
					- 코드가 얼만큼 테스트되고 있는지를 나타내는 소프트웨어의 품질 지표
					- 70~80%가 넘으면 테스트가 잘 되었다고 판단할 수 있다.
			
			- Black Box Test = 명세 기반 테스트케이스 설계
				- 명세(Specification)를 기반으로 테스트케이스를 도출한다.
				- 커버리지를 측정할 수 있으나, 그 의미가 구조 기반 기법의 커버리지에 비해 제한적이다.
		
		- 그리고, 경험 기반 테스트케이스 설계
			- 과거의 결함 사례, 테스트 참여자의 경험과 지식을 기반으로 테스트케이스를 도출한다. 
			- 테스트케이스를 미리 설계하지 않고, 결함을 발견하고, 테스트케이스를 도출한다.
			- 소프트웨어 개발 후 테스트케이스 도출이 가능하다.
			
		1. 요구사항에 명시되어 있으나 구현되지 않은 경우
			- 명세 기반의 테스트케이스를 작성해야 한다.
		2. 요구사항대로 구현되었으나 때에 따라 정상작동 하지 않는 경우
			- 요구사항을 기반으로 테스트케이스를 작성해 실행하고 추가적인 테스트케이스를 수행한다.
		3. 요구사항에 명시되어 있지 않지만 구현된 경우
			- 구조기반으로 테스트케이스를 작성해 실행한다.
			- White Box Test 기법으로 테스트를 해야 완벽하다.
			
	- 명세(Specification) = 예제 = 테스트케이스
	
	- 명세(Specification)
		- 자동이체수수료 단가 업무규칙
			- 자동이체 은행에 따라 다음과 같이 월별로 정산할 자동이체수수료의 단가를 계산하는 규칙은 다음과 같다.
			- 01.의뢰: 성공 또는 실패에 관계 없이 신청 건수에 따라 수수료를 부과하는 경우
			- 02.성공: 이체가 성공한 건수에 따라 수수료를 부과하는 경우
			- 단, 최초 의뢰 시 부과하는 수수료와 재인출 의뢰 시 부과하는 수수료를 차등적용할 수 있다. 
	
		- 요건이 기술되는 언어는 모호하여, 복잡한 요건의 경우는 예제로 구체화해야 코딩이 될 수 
		  있다는 것을 이미 경험하였고, 그렇게 실천하고 있다.
		- 그러나, 모든 사람이 자기만의 비공식적인 예제를 만들었다.
			- BA -> 설계자 설명할 때, 
			- 설계자 -> 개발자 설명할 때,
			- 개발자가 UT를 하기 위해서 즉흥적인 예제를 만들었다.
			
		- 공식예제로서 요건의 모호함을 방지한다. 
		- 요건을 기술하면서, 예제로서 구체화해내지 못한다면, 이 요건은 바뀔 가능성이 농후하다. 
		- 공식예제를 인수테스트케이스로 삼는다.
		- 뭔가 잘못되었을 때, 이 공식예제를 가지고 커뮤니케이션할 수 있고, 공식예제를 정제하여 더욱 
		  분명하게 합의할 수 있다.

	- TDD(Test Driven Development)
		- 테스트 주도 개발
		- TDD의 가장 중요한 특징
			- 외부설계가 끝나면, 개발스프린트가 시작하기 전에 테스트의 성공조건(=테스트케이스)에 대해서 
			  먼저 설계하고 합의한다.
			- 즉, 개발 이전에 테스트케이스를 작성해야 한다.
			- 테스트자동화
			- 반복적인 Regression테스트	
=====================================================================================
	< 이 부분 테스트시나리오, 테스트케이스, 스텝에 대한 용어는 기억을 해두도록 하자 >
	- 테스트시나리오
		- 애플리케이션의 테스트 되어야할 기능/특징(a feature)을 기술한 일반적으로 한 줄 짜리 문장
		- 보통 유스케이스나 업무프로세스로부터 도출됨
		- 테스트 시나리오가 테스트 케이스와 일-대-다 관계를 가짐
	- 테스트케이스
		- 특정한 기능/특징(a feature)이 비즈니스 요구사항을 준수하는지 여부를 평가하기 위한 조건들의 집합
	- 스텝
		- 테스트케이스를 수행하기 위한 상세한 스텝
		- 입력값(input values), 기대값(expected value)를 가짐
=====================================================================================
	- 테스트 케이스 설계하기
		- 1단계 – 테스트시나리오 정하기
			- 프로세스 다이어그램에서 설정한 프로세스와 동일

		- 2단계 – 테스트케이스 도출하기
			- 동등 분할(Equivalence Partitioning)
			  - 가장 기본적인 원리. 배터리잔량표시 사례
			- 테스트 시나리오에서 다루는 데이터 엔티티의 서브 타입(논리모델링하는 다이어그램에 잘 표현되있다.)
			- 계좌개설 시나리오

		- 3단계 – 스탭설계하기
			- 외부설계 리소스단위를 업무프로세스 흐름에 맞추어 배치
				- 화면
				- 배치작업
				- 센터컷
				- I/F
				- 채널서비스
			- 정규 프로세스를 활용한다. 자기만의 데이터셋을 만들지 말 것
			- 특정 테스트케이스의 스탭흐름은 Self-Decisive
				- 프로세스 다이어그램의 분기조건은 테스트케이스의 스탭 흐름에는 존재하지 않는다.
			- 배치작업의 고려사항
				- 배치작업은 한 건으로서만 다룬다.
				- 참고 – 배치는 일괄처리이므로, 복수의 건을 다루면서 발생하는 점검할 것들이 있지만, 
				  이는 거래단위테스트에서 검증한다.
					- 처리건수의 정당성, Commit-interval의 확인
			- 입력값과 기대값의 기재
				- 추상적인 동치분류를 지양한다.
				- 10,000원보다 작은 금액 → 15,000원과 9,500으로 작성

			- 기능을 확인할 수 있는 다른 방법(이미 있는 기능을 활용)을 찾아본다.
				- 예를 들면, 카드입회신청등록의 정상처리여부는 카드정보조회 기능을 이용하여 확인한다.
			- 테스트케이스 목적에 부합하는 기대값만 압축하여 작성한다.
				- 예를 들면, 카드할부전표 매입 케이스와 카드일시불전표 매입케이스에서 신용공여기간에 따른 
				  결제일을 확정하는 기준은 동일하다. 카드일시불전표 매입케이스에서 신용공여기간에 따른 
				  결제일 확정의 정당성을 기대값으로 확인하였다면, 카드할부전표 매입 케이스는 이를 확인할 
				  필요는 없다. 
			- 반복하는 회귀(Regression) Test를 위한 고려사항
				- 테스트데이터를 재활용하지 않는다.
			
			- 내가 삭제테스트 케이스를 한다해서 삭제만 하면 테스트가 되지 않는다.
			- 삭제가 되기위해서는 등록이라는 절차가 있어야 삭제가 가능.			
			
=====================================================================================
			
- 용어 정리
	- LAN ( Local Area Network ) : 근거리 영역 네트워크
		-  LAN 은 Local Area Network 의 약자로써 근거리 통신 망을 의미
		-  "다수의 독립된 컴퓨터 기기들이 상호간에 통신이 가능 하도록 하는 데이터 통신 시스템"
	
	- WAN (Wide Ares Network) : 광대역 네트워크
		- 광역 네트워크(WAN)는 사무실, 데이터 센터, 클라우드 애플리케이션 및 클라우드 스토리지를 
		  서로 연결하는 기술
		- 하나의 건물이나 대규모 캠퍼스를 넘어 특정 지역이나 심지어 전 세계에 분산된 여러 위치까지도 
		  포함하기 때문에 광역 네트워크라고 합니다
	
	- MAN (Metropolitan Area Network) : 대도시 영역 네트워크
		- MAN 은 LAN 보다는 큰 규모를 가지지만 WAN 보다는 지리적으로 작은 규모에서 컴퓨터 자원들과 
		  HOST들을 연결하는 도시권 통신망이라 합니다.
	
	- VAN (Value Added Network) : 
		- 부가가치 통신망 정보의 축적과 제공, 통신속도와 형식의 변화, 
		  통신경로의 선택 등 여러 종류의 정보서비스가 부가된 통신망.
	
	- 네트워크의 공간 크기 개념 : WAN > MAN > LAN > PAN
	
	- 신용공여기간 
		- 카드를 긁고 실제 돈이 빠져나가기 전까지의 기간