테스팅 : 어플리케이션 또는 시스템의 동작과 성능 안정성이 요구사항을 만족하는지 확인하는 과정

결함 : 요구사항을 만족시키지 못하는 것

완벽한 테스트는 없고 테스트는 개발초기에 시작
요구사항 정의서와 설계서 등의 개발산출물을 분석하여 테스트케이스를 도출하는 과정을 통해 결함을 발견해야함

결함 집중 : 대다수의 결함들은 소수의 특정 모듈에 집중되어 발생한다.

살충제 패러독스 : 동일한 테스트케이스로 동일한 테스트를 반복적으로수행한다면 나중에는 더이상 새로운 결함을
	찾아내지 못한다. 테스트케이스는 정기적으로 리뷰하고 추가해야한다.

V모델 : 개발 프로세스에 따라 각 개발단계에 대응하는 테스트 단계를 도식화한 것
	개발전에 테스트 케이스를 만들어야함

Unit Test : 특정 클래스의 메소드 단위의 테스트

거래단위 Test : 하나의 거래를 완성하기 위해 클래스간의 의존관계를 포함한 테스트

통합 Test : 프로세스 단위의 테스트 프로세스와 프로세스의 결합을 테스트

인수 Test : 다양한 형태로 나타날 수 있음, 보통 코어뱅킹에서는 영업점테스트를 의미함

기능 Test : 기능 요구사항을 만족하는지 확인하는 테스트

비기능 Test : 성능, 가용성, 보안성, 운영절차 등 품질 속성을 만족하는지 확인하는 테스트

Regression Test : 반복테스트, 과거에 정상적으로 작동하던 기능이 다른 기능을 수정한 이후에도 잘 작동하는지 테스트

신구 비교 Test : Legacy 시스템의 결과와 To-Be시스템의 결과가 동일한지 검증하는 테스트

싸이클 Test : 일정기간 시간의 흐름을 갖는 업무 프로세스를 테스트

데이터 이행 Test : Legacy(As-Is) 시스템으로부터 이행한 데이터의 정합성을 확인하는 테스트

테마집중 Test : 상품출시, 정보보안, 권한관리, 회계분개 처리

대외연계 Test : 대외기관과의 I/F의 정합성을 확인하는 테스트

White Box Test   vs   Black Box Test
White Box Test은 소프트웨어 내부 소스코드를 확인하는 기법이다.
Black Box Test은 소프트웨어의 내부를 보지 않고, 입력과 출력값을 확인하여,기능의 유효성을 판단하는 테스트 기법

경험 기반 테스트케이스 설계 : 과거의 결함 사례, 테스트 참여자의 경험과 지식을 기반으로 테스트 케이스를 도출
	테스트케이스를 미리 설계하지 않고 결함을 발견후 테스트 케이스를 도출


TDD(테스트 주도개발) : 외부 설계가 끝나면 개발을 시작하기전 테스트의 성공조건에 대해 합의
	개발이전에 테스트케이스 작성
	반복적인 Regression 테스트