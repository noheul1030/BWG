< 2023.08.16 >

1. 객체지향 설계원칙 중 단일 책임원칙에 대해서 설명해주세요
2. 빅테크 기업의 의미를 설명해 주세요.
3. 알고 있는 개발자의 종류를 적어주세요.
4. Java의 연산자 "=="와 "equals()"의 차이점을 설명해 주세요.
	==연산자와 equals()메소드의 가장 큰 차이점. == 연산자는 비교하고자 하는 두개의 대상의 주소값을 비교하는데, 
	String클래스의 equals 메소드는 비교하고자 하는 두개의 대상의 값 자체를 비교한다는 점이다.
5. Java의 실수형 데이터 타입을 적어 주세요.
	1. float
	2. double
6. Java와 Spring의 관계를 설명해 주세요.
7. IDE에 대해서 설명해 주세요.
	- 통합 개발 환경(Integrated Development Environment, IDE)이란 
	  공통된 개발자 툴을 하나의 그래픽 사용자 인터페이스(Graphical User Interface, GUI)로 
	  결합하는 애플리케이션을 구축하기 위한 소프트웨어입니다.
8. 테스트 주도 개발(TDD)에 대해서 설명해주세요.
9. 애자일 방법론에 대해서 설명해 주세요.
	애자일(Agile) 방법론이란? 애자일(Agile)은 '기민한, 민첩한'이라는 뜻으로 일정한 주기를 가지고 
	빠르게 제품을 출시하여 고객의 요구사항, 변화된 환경에 맞게 요구를 더 하고 수정해나가는 탄력적인 방법론을 말합니다.
	작업 계획을 짧은 단위로 세우고 제품을 만들고 고쳐 나가는 사이클을 반복함으로써 고객의 요구 변화에 유연하고도 신속하게 대응하는 개발 방법론이다.
10. 프론트앤드와 백앤드의 차이점을 설명해주세요.

------------------------------------------------------------------------------
* 신분상승의 기회! :-D * 
- 정보처리기사 -> PMP(국제공인 자격증) -> 정보시스템감리사 -> 정보관리기술사
	(학사)							 (석사)			(박사)
	
------------------------------------------------------------------------------
- 요구사항(요건, Requirement)
	성명
	휴대폰번호
	이메일주소
	집주소
- 요구사항 추가
	A,B반을 따로 공지할 필요가 있음.
	=> 열(컬럼)을 추가
- 요구사항 추가2
	혈액형별로 공지할 필요가 있음
------------------------------------------------------------------------------
< 1교시 >

- 데이터 모델의 종류 : 개념 / 논리 / 물리
- 엔티티 : 예시) 비상연락망 자체가 하나의 엔티티, 만약에 A,B반으로 sheet를 나눴다면 2개의 엔티티로 나눈 것
- ERD : Entity Relation diagram
- 논리 데이터모델링의 절차에 대한 용어 공부

------------------------------------------------------------------------------
< 2교시 >

- 엔티티(Entity)와 관계(Relationship)와 속성(Attribute)을 데이터 모델링의 3요소라 한다.
- 식별자 : 유니크하게 구분되는 학번 혹은 반 코드
- UML : 통합 모델링 언어
	< UML을 사용하는 이유 >
	
		하나의 시스템을 개발하기 위해 보통 여러 사람이 참여합니다.
		참여인원 중에는 개발자, 사용자가 있고 때로는 설계자, 분석가가 있을 수도 있습니다.
		이 때 개발하려는 시스템과 이 시스템의 기능, 구조 등을 참여인원 모두에게 설명하려면 어떻게 해야 할까요?
		물론 말로도 설명이 가능하겠지만, 기능과 구조를 문서화하여 이해시키는 것이 훨씬 효율적일 것입니다.
		하지만 이를 표준화된 양식을 사용하여 작성하지 않았을 때, 내부 작성 양식에 따라 작성한 문서를 사용자, 개발자, 
		설계자 모두가 이해하긴 힘듭니다. 또한 내부 작성 양식을 만들고, 적응하고 이해하는 데 자원이 소모되기 때문에 
		표준화된 양식을 사용하는 것이 바람직합니다.
		UML에 따라 작성한 문서는 표준 양식에 의해 작성된 문서이기 때문에, 참여인원들이 이해하기 편하며, 
		효율적으로 의사소통 할 수 있습니다.  또한 한번에 이해하기 힘든 복잡한 시스템을 시각적으로 모델링하여 
		구조를 보다 알아보기 쉽습니다.
	
	
	< UML의 종류 >
		- 유스케이스 다이어그램: 사용자(Actor)의 관점에서 시스템의 기능, 상호작용과 그들간의 관계를 표현합니다.
		- 클래스 다이어그램: 클래스의 속성, 메서드, 관계를 표현합니다.
		- 액티비티 다이어그램: 프로그램의 시작과 끝을 정의하고, 작업의 수행과정을 단계적으로 정의합니다.
		- 시퀀스 다이어그램: 객체간의 상호작용을 시간의 흐름에 따라 나타냅니다.
		- 커뮤니케이션 다이어그램: 객체간의 상호작용을 메시지의 관점으로 나타냅니다.
		- 상태 다이어그램: 객체가 취할 수 있는 상태와 상태변화를 표현합니다.
		- 컴포넌트 다이어그램: 소프트웨어 컴포넌트들과 그들의 관계, 구조를 표현합니다.
		- 배포 다이어그램: 프로그램의 아키텍처를 물리적인 관점에서 설계합니다.
		- 패키지 다이어그램: 관련있는 요소들을 하나의 패키지로 묶고, 패키지 사이의 관계를 표현합니다.
- 명명규칙을 지켜야 한다
	- 기본 / 상세 / 내역 / 이력 / 관계 / 목록
	- 기본 : 중복되지 않는 가장 순수한 원천인 이름
- Key : 유니크하게 중복되지 않는 값이 제일 눈에 띄는 앞에 위치하도록 하는것이 코딩 센스
	- 복합 키 
	
- 데이터의 정합성, 결합성이 떨어지게 되면 데이터모델링의 신뢰도가 떨어진다.