6. 스프링
	- SPRING
		- 객체를 관리할 수 있는 컨테이너를 제공(싱글톤 기법)
			- spring MVC(model, view, control)
			- 순수 자바
		- 자바의 오픈소스 애플리케이션 프레임워크 중 하나로 스프링의 기본철학은 특정 기술에 종속되지 않고
		  객체를 관리할 수 있는 프레임워크를 제공하는 것 입니다.
		- 컨테이너로 자바 객체를 관리하면서 의존성 주입과 제어의 역전을 통해 결합도를 낮추게 됩니다.

	- DI(Dependency Injection)
		- 의존성 주입, 컨테이너가 의존관계를 자동으로 연결
		- DI는 Dependency Injection의 약자로 의존성 주입을 의미합니다.
		- 객체간의 의존관계를 미리 설정해두면 스프링 컨테이너가 의존관계를 자동으로 연결해 줍니다.
		- 직접 의존하는 객체를 생성하거나 검색해서 가져올 필요가 없어서 결합도가 낮아지는 장점이 있습니다.
	
	- IOC(Inversion of Control)
		- 자바에서 직접 제공하지 않고 외부에서 가져오는 것을 라이브러리라고 한다.
		- 전체 로직이 어떻게 짜여지고 움직이는지를 관리하는 흐름이 이미 정해져 있고, 개발자는 부분의 코드만 채워 넣는다.
		- IOC는 Inversion of Control의 약자로 제어의 역전을 의미합니다.
		- 제어권이 사용자에게 있지 않고, 프레임워크에 있어서 필요에 따라 사용자의 코드를 호출하게 됩니다.
		- 스프링에서는 인스턴스의 생성부터 소멸까지 개발자가 아닌 컨테이너에서 대신 관리하게 됩니다.
		
	- ORM(Object Relational Mapping)
		- ORM는 Object Relational Mapping의 약자 
		- 관계형 데이터베이스(RDBMS)를 OOP 언어로 변환해주는 기술
		- 비즈니스 코드가 DB 테이블에 바로 접근하게 도와줍니다.
		
	- JPA 
		- ORM을 위해 자바에서 제공하는 API
		- 자바 객체와 DB 테이블을 Mapping하는데 구현체로는 하이버네이트가 있다.
		- JPA는 인터페이스 이다.
		- 대표적으로는 하이버네이트가 있다(implement로 구현).
	
	- ORM, JPA, Hibernate 장단점
		장점
		- 비즈니스 로직(내가 짜는 코드)에 집중하고 , 객체중심의 개발을 할 수 있게 됩니다.
		- 메소드 호출만으로 쿼리를 수행해서 생산성 향상, 유지보수 비용 감소
		- 특정 DB에 의존하지 않는다.
		
		단점
		- 직접 SQL을 호출하는 것 보다는 성능이 조금 느려짐.
		- 아주 복잡한 쿼리는 메소드, 하이버네이트로 구현이 어렵다.






- 스프링이란?
	- IoC란?
	- DI란?
	- 디스패처 서블릿이란?
	- 디스패처 서블릿으로 인한 web.xml 역할 축소
	- AOP란?
	- AOP 용어 설명
	- AOP 사용 경험 : 공통 로그 구현
	- 필터와 인터셉트 차이
	- 스프링 MVC 구조 흐름
	- 스프링과 스프링 부트 차이
	- 스프링 어노테이션
	- 어노테이션 종류
	- 스프링 버전별 기능
	- MVC 1과 MVC 2의 차이
- ORM
	- JPA
	- ORM, JPA, Hibernate 장단점
	- Mybatis란?
	- Mybatis, JPA 차이
	- Spring JDBC
	- DAO, DTO 란?
	