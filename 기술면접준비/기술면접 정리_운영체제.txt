- 자기소개, 마지막 할말
- 질문에 대한 답변을 2~3마디 답변으로 준비하자
- 질문을 유도하는 방법 연습 (내가 원하는 질문으로 이끌어 가게 끔하면 답변하기 쉬워진다.)

* 전공 면접 필수 과목 *

1. 운영체제
	- 운영체제란?
		- 시스템(CPU,메모리 등)의 자원과 동작을 관리하는 소프트웨어
		- 프로세스, 저장장치((RAM,HDD하드디스크), 네트워킹, 사용자, 하드웨어를 관리

	- 메모리 구조(RAM)
		- 메모리 공간 종류 4가지 : Code(실행할 프로그램의 코드), Data(전역변수, 정적변수)
				, Heap(사용자의 동적 할당): 런 타임에 크기가 결정됨, 데이터가 동적으로 할당되는 공간
				, Stack(함수의 호출정보, 지역변수, 매개변수): 컴파일 타임에 크기가 결정됨

	- 프로세스 : 실행중인 프로그램(각각의 프로세스는 독립된 영역을 갖는다)
		- 한 프로세스당 개별의 Code, Data, Heap, Stack을 가지고 있음
		- 프로세스에서 Code, Data, Heap은 공유되지만 각각의 스레드가 갖고있는 Stack은 공유되지 않음

	- 스레드 : 프로세스 안에서 실행되는 흐름 단위(프로세스 안에서 다른 스레드와 메모리와 CPU를 공유해서 사용합니다)

	- CPU 스케줄러 : 준비큐 있는 프로세스에 대해 CPU 할당하는 방법
		- 선점 : 남의 것(CPU)을 뻇는 스케줄링 방식
			- SRT(Shortest Remaining Time) : 
				진행중인 프로세스가 있어도, 최단 잔여시간인(남은 시간이 짧은)
				프로세스를 위해 Sleep 시키고 짧은 프로세스를 먼저 할당, 선점형 SJF 스케줄링이라 불린다.
			- RR(Round Robin) : 
				Time Sharing System을 위해 설계된 스케줄링.
				모든 프로세스가 같은 우선순위, Time 컨텀이 잦다면 FCFS와 다를게 없다.
				그러므로 Time 컨텀을 짧게 적절히 조절하는 것이 중요 .
			- Priority Scheduling(우선순위 스케줄링) :
				우선 순위가 높은 프로세스에 CPU를 우선 할당하는 방식.
				우선 순위는 시간 제한, 메모리 요구량, 프로세스의 중요성, 자원 사용 비용등에 따라 달라질 수 있음.
				우선 순위가 같을 경우, FCFS와 다를게 없다.(비선점, 선점 둘다 사용)
				 
		- 비선점 스케줄링 : 남의 것(CPU)을 뻇지 않는 스케줄링 방식
			- FCFS(First Come First Served) : 먼저 들어오는 순서대로 처리
			- SJF(Short Job First) : 버스트 시간이 짧은 프로세스부터 CPU를 할당 처리

	- 가상 메모리 : 사용하는 부분만 메모리에 올리고, 나머지는 디스크에 보관
		모든 프로세스에게 메모리를 할당하기에는 메모리의 크기가 한계가 있어서 사용하는 방법.
		프로세스에서 사용하는 부분만 메모리에 올리고 나머지는 디스크에 보관하는 기법을 가상메모리라 함.
	
	- 데드락이란? : 프로세스가 자원을 얻지 못해 다음 작업을 못하는 상태 입니다.
		* 데드락 발생조건 * 
		- 데드락은 네가지 조건이 동시에 성립 할 때 발생. 하나라도 성립하지 않도록 만든다면 데드락을 해결할 수 있다.
			1. 상호 배제(Mutual exclusion) : 
				자원은 한번에 한 프로세스만이 사용할 수 있어야 한다.
			2. 점유 대기(Hold and wait) : 
				최소한 하나의 자원을 점유하고 있으면서 다른 프로세스에 할당되어 사용하고 있는
				자원을 추가로 점유하기 위해 대기하는 프로세스가 있어야 한다.
			3. 비선점(No preemption) : 
				다른 프로세스에 할당된 자우너은 사용이 끝날 때까지 강제로 빼앗을 수 없어야 한다.
			4. 순환 대기(Circular wait) :
				프로세스의 집합 {P0,P1,...Pn}에서 P0는 P1이 점유한 자원을 대기하고 P1은 P2가 점유한 자원을 대기하고
				Pn은 P0가 점유한 자원을 요구해야한다.
		- 데드락 처리
		
		
		
		
		

- 운영체제란?
- 실행파일 생성 과정
- 프로그램 실행과정
	- 명령어사이클
- 캐시란?
- 캐시라인
- 메모리구조
	- 전역변수와 정적변수의 차이
	- Heap, Stack 비교
	- 가시성(visibility)과 원자성(atomocity)
	- 유효주소, 주소지정방식
	- 메모리 할당 알고리즘
- 프로세스, 스레드
	- 멀티 프로세스와 멀티 스레드
	- 스레드와 프로세스 콘텍스트 스위치 차이 이유
	- 프로세스 스케줄러에 대해
	- CPU 스케줄러
	- 스레싱이란?
	- IPC란?
	- Race Condition?
	- User, Kernel 스레드 차이
- 가상 메모리
	- 메모리 단편화
	- 페이징기법
	- 세그먼테이션 기법ㅏ
	- 메모리풀
	- 페이지 교체 알고리즘
	- MMU란?
	- TLB란?
	- 페이지 부재시 절차
- 인터럽트란?	
	- System Call
	- 프로세스 제어 명령
	- fork(), vfork() 차이
	- 시스템콜과 서브루틴 차이
- 블록킹, 논블록킹
- 동기, 비동기
- 동기 IO 처리과정 : 프로세스 A가 디스크에서 어떤 데이터 읽어올때 상황
- 입출력 처리방식
	- DMA
	- Cycle Stealing
- 데드락
	- 발생조건
	- 회피기법
	- 해결경험
	- PCB(Process Control Block) 이란?
	- Spin Lock 이란?
- 동기화 종류
- Critical Section?	
- Mutex란?
- Semaphore란?
- Mutex, Semaphore 차이
- Monitor란?
- Thread-safe 란?
	- Reentrant란?
- 인터럽트, 폴링 개념 및 차이
- Fault Tolerance 란?
	- 작동절차

		
		
		
		
	


* 그 외 *
10. stream API란?
11. Optional 클래스란?
12. OOP의 4가지 특징, 5대 원칙(SOLID)
13. HTTP 응답 코드 유형에 대한 답변 300번대 400번대 500번대
14. OSI 7계층
15. 인터페이스와 추상클래스의 차이
16. ERD : 
	ERD란 Entity Relationship Diagram의 약어로, 데이터베이스 구조를 한눈에 알아보기 위해서 쓰인다. 
	DB를 개발하기 전에 보다 많은 아이디어를 도출하고, 데이터베이스 설계의 이해를 높이기 위해 데이터 모델링을 실시한다.
17. 모델링 정규화
- 자바 또는 스프링의 특징
- 스프링의 3대 장점
- 객체지향 3대 원칙
- 소프트웨어 형상관리
